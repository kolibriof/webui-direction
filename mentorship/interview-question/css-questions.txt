1. What is the Box model in CSS? Which CSS properties are a part of it?
  - The box model is a model that wraps every HTML element. It consists of: margin, border, padding and content. 
2. What are the advantages of using CSS?
  - a) Better user experience. CSS enables you to create web apps with pleasing look and also they are easier to interact with.
  - b) CSS enables you to use less code. You can create a style for certain class or tag and use that style on multiple HTML elements.
  - c) With CSS it's easy to format the pages with the same CSS style sheet. You don't need to change particular page's style.
3. What are the limitations of CSS?
  - a) Sometimes the same CSS code won't be compatible across all browsers. Delelopers need to test for compatibility in different browsers.
  - b) CSS can't perform logical operations such as: if, while, for.
  - c) CSS cannot interact with databases.
4. What are the different types of Selectors in CSS?
  - a) HTML element selector(tag), ex.: p, div, span, button..
  - b) Element id, ex.: "#btn"
  - c) Element class, ex.: ".btn"
  - d) Universal selector (selects all the elements), ex.: "div *", "*", ".btn *" 
  - e) Grouping selector (elements with the same style), ex.: "div, p, span, .btn {}"
5. What is a CSS Preprocessor? What are Sass, Less, and Stylus? Why do people use them?
  - So basically CSS Preprocessors add logic to the CSS. Also, It enables you to use powerful features such as nesting and mixins. Mixins
  can be useful when writing a similar CSS code with different values, ex.: @mixins container($width, $height) {width: $width; height: $height} and then you can
  use this code to create similar containers, ex.: .new-container { @include container(100px, 200px) }.
  - We can also use logic such as @if @for @while @each by using CSS Preprocessors.
  - Sass, Less and Stylus are CSS Preprocessors, they share basically the same functionality.
  - People use them to simplify their code and make it more readable. 
6. What is the difference between inline, inline-block, and block?
  - inline ~ the element does not start in a new line and occupies only the width and height that it needs. You can't set width and height for such elements.
  ex. elements: span, a, img
  - inline-block ~ basically the same as inline, but you can set the height and width.
  - block ~ the opposite. It starts in a new line and occupies the entire width of the parent element. You can set the width and height.
7. What are Pseudo elements and Pseudo classes?
  - Pseudo classes enables you to add a style for the particular state of the element, ex.: :hover, :active, :first-child
  - Pseudo elements act as if you added a whole new element, ex.: you can add some content before and after the element by using ::after or ::before pseudo elements.
8. Does margin-top or margin-bottom have an effect on inline elements?
  - It does not, because inline elements flow with the content on the page. However, you can set the horizontal margins.
9. What property is used for changing the font face?
  - font-family, src
10. What are the differences between adaptive design and responsive design?
  - Adaptive design changes the layout, depending on the screen size. On the other hand, responsive design does not change the layout. It will adjust its content for different screeen sizes.
11. How are the CSS selectors matched against the elements by the browser?
  - They are matched from the right to left, ex.: ul li a {color: red;}  1 - a, 2 - li, 3 - ul
12. How is border-box different from content-box?
  - So basically, border-box remains the width, and in case if we are adding the border or padding to our element, the width remains the same, so for example if   we have a border-box element with width 300px and if we added a 10px border, then we will have a 290 width plus 10px border, so the overall width remains       300px. With the content-box borders and padding are added to the element's width, so with the same setup we will have 310px total width. In conclusion, when using border-box, if we added padding and border, the total width and height of the element are not affected.
13. What is a z-index, and how does it function?
  - It determines the stack order of an element
14. What are the properties of flexbox?
  - flex-direction
  - flex-wrap
  - flex-flow
  - justify-content
  - align-items
  - align-content
15. What is cascading in CSS?
  - Cascading in CSS is the process of determining which style rules should be applied to an HTML element when there are multiple conflicting rules, based on their levels of specificity and source order.
16. Explain CSS position property?
  - The position property in CSS is used to position an element on a web page. It has four values: static (default), relative, absolute, and fixed. static positions an element according to the normal flow of the document, while relative positions it relative to its normal position. absolute positions it relative to its nearest positioned ancestor or initial containing block, and fixed positions it relative to the viewport.
17. What is the grid system?
  - Grid system is the system of positioning elements on the page. Basically, it works as a table, but you can define such options as grid-template-columns and grid-       tamplate-rows etc., which gives you more flexibility, comparing to the table system, when working with the grid-like elements on the page.
18. What are the different ways to hide the element using CSS?
  - visibility: 0, display: none, opacity: 0; filter(opacity: 0)
19. How does Calc work?
  - width: calc(100px + 100px);
  - height: calc(100% / 5);
20. What do CSS Custom properties variables mean?
  - custom properties can be defined starting with "--", they are useful for readability, as you can define the same value in them and use it across the whole style sheet, ex.: --main-color: red, background-color: var(--main-color, red) //if var is not defined then red
21. What does !important mean in CSS?
  - when defining a style, the !important property mean, that this particular style should be applied and others ignored 
22. What are the advantages of using translate() instead of absolute position?
  - when using translate() instead of absolute positioning, we can experience following advantages:
  a) Better overall animation performance.
  b) Better reponsiveness 
23. How will you fix browser-specific styling issues?
  - By using specific prefixes, ex.: -webkit, -moz
  - By defining browser in JS. Create a function that defines which features are supported, and apply the styles accordingly.
24. Can we add 3D transformations to our project using CSS?
  - transform(rotateX, rotateY, rotateZ)
25. What are CSS transitions?
  - allows to change the properties values smoothly, for example, wheen using pseudo classes, ex.: transition: 1s ease-in-out;
26. What are @keframes used for?
  - generally it is used for animation. Using it we can define what happens when animation reaches certain point (10% - 100%, from - to). Animation name mus tbe defined    in the `animation` property 
27. What is meant by universal selector?
  - it is the CSS selector that looks like this `*`. It selects all HTML elements inside the specific element, ex.: div * {}. Also, it can be used to define general style for the whole page, ex.: * {color: red;}
29. What are the attribute selectors?
  - They match the element with the certain attribute or value, ex.: a[href="*.html"], button[value="click me"]
30. What class naming methodologies in CSS do you know?
  - BEM
  - ATOMIC
  - SMACSS
